import { isPhoneNumber } from "../../../src";

describe("europe/fi", () => {
  const validCases: string[] = [
    "+3581234567",
    "+35850123456",
    "+35820123456",
    "+35840123456",
    "+358501234567",
    "+358201234567",
    "+358401234567",
    "+3585012345678",
    "+3582012345678",
    "+3584012345678",
  ];
  const invalidCases: string[] = [
    "+358123456789012",
    "+3581234567890123",
    "+35812345678901234",
    "+358123456789012345",
    "+3581234567890123456",
    "+35812345678901234567",
    "+358123456789012345678",
    "+3581234567890123456789",
    "+358123456789012",
    "+3581234567890123",
    "+35812345678901234",
    "+358123456789012345",
    "+3581234567890123456",
    "+35812345678901234567",
    "+358123456789012345678",
    "+3581234567890123456789",
    "+35812345678901",
    "+358123456789012",
    "+3581234567890123",
    "+35812345678901234",
    "+358123456789012345",
    "+3581234567890123456",
    "+35812345678901234567",
    "+358123456789012345678",
    "+3581234567890123456789",
    "+35812345678901234567890",
    "+358123456789012345678901",
    "+3581234567890123456789012",
    "+35812345678901234567890123",
    "+358123456789012345678901234",
    "+3581234567890123456789012345",
    "+35812345678901234567890123456",
    "+358123456789012345678901234567",
    "+3581234567890123456789012345678",
    "+35812345678901234567890123456789",
  ];
  describe("Valid Cases", () => {
    validCases.forEach((phoneNumber) => {
      it(`should return true for a valid phone number: ${phoneNumber}`, () => {
        expect(isPhoneNumber(phoneNumber, "+358")).toBe(true);
      });
    });
  });

  describe("Invalid Cases", () => {
    invalidCases.forEach((phoneNumber) => {
      it(
        "should return false for an invalid phone number: " + phoneNumber,
        () => {
          expect(isPhoneNumber(phoneNumber, "+358")).toBe(false);
        }
      );
    });
  });
});
