import { isPhoneNumber } from "../../../src";

describe("europe/be", () => {
  const validCases: string[] = [
    "+3220123456",
    "+3247012345",
    "+3248012345",
    "+3249012345",
    "+3250123456",
    "+3255012345",
    "+3257012345",
    "+3258012345",
    "+3259012345",
    "+3260123456",
    "+3265012345",
    "+3267012345",
    "+3268012345",
    "+3269012345",
    "+3270123456",
    "+3275012345",
    "+3277012345",
    "+3278012345",
    "+3279012345",
    "+3280123456",
    "+3285012345",
    "+3287012345",
    "+3288012345",
    "+3289012345",
    "+3290123456",
    "+3295012345",
    "+3297012345",
    "+3298012345",
    "+3299012345",
  ];
  const invalidCases: string[] = [
    "+32201234",
    "+32470123",
    "+32480123",
    "+32490123",
    "+32501234",
    "+32550123",
    "+32570123",
    "+32580123",
    "+32590123",
    "+32601234",
    "+32650123",
    "+32670123",
    "+32680123",
    "+32690123",
    "+32701234",
    "+32750123",
    "+32770123",
    "+32780123",
    "+32790123",
    "+32801234",
    "+32850123",
    "+32870123",
    "+32880123",
    "+32890123",
    "+32901234",
    "+32950123",
    "+32970123",
    "+32980123",
    "+32990123",
  ];
  describe("Valid Cases", () => {
    validCases.forEach((phoneNumber) => {
      it(`should return true for a valid phone number: ${phoneNumber}`, () => {
        expect(isPhoneNumber(phoneNumber, "+32")).toBe(true);
      });
    });
  });
  describe("Invalid Cases", () => {
    invalidCases.forEach((phoneNumber) => {
      it(
        "should return false for an invalid phone number: " + phoneNumber,
        () => {
          expect(isPhoneNumber(phoneNumber, "+32")).toBe(false);
        }
      );
    });
  });
});
